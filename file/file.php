Чтение файлов в PHP<br>
<?php
echo file_get_contents('text.txt');
?><br>
Пусть у вас есть файлы 1.txt и 2.txt, 
в тексте которых записаны какие-то числа. 
Напишите скрипт, который выведет на экран сумму 
записанных в этих файлах чисел.<br>

<?php
echo file_get_contents('1.txt') + file_get_contents('2.txt');

?><br>
Запись файлов в PHP<br>

<?php
$arr = [1,2,3,4,5,6];
$sum = array_sum($arr);
echo file_put_contents('text.txt',$sum );//text.txt = 21
?><br>

Комбинация операций чтения и записи файла в PHP<br>
<?php
$t = file_get_contents('1.txt');
file_put_contents('1.txt', $t. ' '. 'enter');

?><br>
Пусть у вас есть файл, в котором записано некоторое число. Откройте этот файл, 
возведите число в квадрат и запишите обратно в файл.<br>
<?php
$text = file_get_contents('2.txt');
file_put_contents('2.txt', $text * $text);
?><br>
Пусть в корне вашего сайта лежит файл count.txt. 
Изначально в нем записано число 0.
 Сделайте так, чтобы при обновлении страницы наш скрипт 
 каждый раз увеличивал это число на 1. 
 То есть у нас получится счетчик обновления страницы в виде файла.<br>
//////////////////////////////////////////
<?php
$file = 'counter.txt';
if(!isset($file)){
    $counter = file_get_contents($file = 1);
    $counter = 1;
}else{
    
    
   echo file_put_contents($file, ++ $counter  );
}

?><br>
Пусть в корне вашего сайта лежат файлы 1.txt, 2.txt и 3.txt. 
Вручную сделайте массив с именами этих файлов. 
Переберите его циклом, прочитайте содержимое каждого из файлов, 
слейте его в одну строку и запишите в новый файл new.txt. 
Изначально этого файла не должно быть.<br>
<?php
$arry = ['a.txt', 'b.txt', 'c.txt'];
$s ='';
foreach($arry as $f){
 $s = $s. ' ' . file_get_contents($f);
     
}
file_put_contents('new.txt', $s);
?><br>
                
<!-- if(!isset($_COOKIE['count'])){
    setcookie('count' ,1);
$_COOKIE['count'] = 1;
}else{
    setcookie('count', $_COOKIE['count'] + 1);
    $_COOKIE['count'] = $_COOKIE['count'] +1;
}
echo $_COOKIE['count'] -->

Относительные пути в PHP<br>



<?php
	echo file_get_contents($_SERVER['DOCUMENT_ROOT'] . '/test.txt');
?><br>
Переименовывание файлов в PHP
Функция rename позволяет переименовывать файлы. 
Первым параметром указываем старое имя файла,
 вторым - новое имя файла <br>
<?php
rename('test.txt', 'files.txt');

?><br>

Перемещение файлов в PHP
Функция rename позволяет также перемещать файлы. 
Для этого вторым параметром функции нужно указать новый путь к файлу.

Пусть в корне вашего сайта лежит файл file.txt.
 Пусть также в корне вашего сайта лежит папка dir. 
 Переместите файл в эту папку.<br>
 <?php
 rename('files.txt', 'dir/files.txt');
 
 ?>
 Пусть в корне вашего сайта лежит папка dir1, а в ней файл file.txt.
 Пусть также в корне вашего сайта лежит папка dir2. 
 Переместите файл в эту папку.

 <?php
 rename('files.txt', $_SERVER['DOCUMENT_ROOT'] .'/files.txt');
 ?>
 <?php
 rename('c.txt', 'dir/c.txt');
 ?><br>
 Копирование файлов в PHP
 ///////////////////////////
 Функция copy позволяет копировать файл. 
 Первым параметром она принимает путь к файлу, 
 который хотим копировать, вторым - новый путь файла, 
 куда хотим положить копию.

<?php
copy('b.txt', 'copy.txt');
?>
А теперь давайте поместим нашу копию в папку dir:
<?php
copy('b.txt', 'dir/copy.txt');
rename('text.txt', 'dir/text.txt');
?>
<?php  
for($i = 1; $i <= 5; $i++) {
    copy('copyes.txt', 'copy/copyes.txt').$i;
}

?>
/////////////////////////////////////<br>
Удаление файлов в PHP
Для удаления файлов используется функция unlink.
 Параметром она принимает путь к удаляемому файлу:

 <?php
	unlink('dir/text.txt');
?>

<?php
$arr = ['4.txt', '5.txt', '6.txt'];
foreach($arr as $d){
    unlink($d);
}

?><br>
Определение размера файлов в PHP
Функция filesize позволяет находить размеры файла в байтах.<br>


<?php
	echo filesize('dir/copy.txt');
?><br>
Размер в байтах легко можно перевести в килобайты:<br>
<?php
echo filesize('dir/c.txt')/1024;

?><br>
А теперь давайте переведем в мегабайты:<br>
<?php

echo filesize('new.txt')/(1024 * 1024);
?><br>
Положите в корень вашего сайта какую-нибудь картинку размером более мегабайта.
 Узнайте размер этого файла и переведите его в мегабайты.<br>
 <?php
 echo filesize('images.jpg')/(1024 * 1024).'Mb';
 ?><br>
 Положите в корень вашего сайта какой-нибудь 
 фильм размером более гигабайта. 
 Узнайте размер этого файла и переведите его в гигабайты.<br>
 <?php
 echo filesize('timer.mp4')/(1024*1024*1024).'Gb';
 ?><br>
 Проверка существования файлов в PHP<br>
 Функция file_exists проверяет существует ли файл, путь к которому передан параметром.<br>
 <?php
 echo var_dump(file_exists('copy.txt'));
 ?><br>
<?php
if (file_exists('b.txt')){
    echo filesize('b.txt').'kb';
} else {
    echo "файла нет";
}
?>
<?php
if(file_exists('c.txt')){
    echo 'файл существует';
} else {
    echo file_get_contents('c.txt', 'hello world');
}
?>
<?php
echo 'hello';

?>
Создание папок в PHP<br>
Функция mkdir позволяет создать папку. Параметром принимает путь к папке.<br>
<?php
mkdir('dir3');

?>
Дан массив со строками. Создайте в корне вашего сайта папки, 
названиями которых служат элементы этого массива<br>
////////////////////////////////////
Создайте в корне вашего сайта папку с названием test. 
Затем создайте в этой папке три файла: 1.txt, 2.txt, 3.txt.<br>
/////////////////////////////
Удаление папок в PHP
Функция rmdir используется для удаления папок. <br>

<?php

rmdir('dir3');

?><br>

<?php 
mkdir('old');

?>
Переименование папок в PHP
С помощью функции rename можно переименовывать папки.<br>

<?php

rename('old', 'new_file');

?>
Перемещение папок в PHP
С помощью функции rename можно перемещать папки.

<?php
rename('new_file', 'file/dir');
?>






