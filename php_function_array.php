<?php
//Функция in_array
//in_array(что искать, в каком массиве);
//Проверьте, что в нем есть элемент со значением 3.
$arr = [1, 2, 3, 4, 5];
var_dump(in_array(9, $arr));//false
//Работа с array_sum и array_product
//Найдите сумму элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr);
echo "\n";
//Найдите произведение (умножение) элементов данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_product($arr);
echo "\n";
// С помощью функций array_sum и count найдите среднее 
// арифметическое элементов (сумма элементов делить на их количество) данного массива.
$arr = [1, 2, 3, 4, 5];
echo array_sum($arr)/count($arr);
echo "\n";
//Работа с range - диапазон
//range(откуда, докуда, [шаг]);
//Создайте массив, заполненный числами от 1 до 100.
var_dump(range(1,100));
//Создайте массив, заполненный буквами от 'a' до 'z'.
var_dump(range('a','z'));
//Создайте строку '1-2-3-4-5-6-7-8-9' не используя цикл.
$arr = range(1,9);//диапазон элементов в массиве
$arr1 = implode('-', $arr);//перевод массива в строку
echo $arr1;
echo "\n";
//Найдите сумму чисел от 1 до 100 не используя цикл.
$arr = range(1,100);
echo array_sum($arr);
echo "\n";
//Найдите произведение чисел от 1 до 10 не используя цикл.
$arr = range(1,10);
echo array_product($arr);
echo "\n";
//Работа с array_merge
$arr1 = [1, 2, 3];
$arr2 = ['a', 'b', 'c'];	
var_dump(array_merge($arr1, $arr2)) ;
//Работа с array_slice
//array_slice(массив, откуда отрезать, 
	//[сколько], [сохранять ключи = true]); 
    $arr = [1, 2, 3, 4, 5]; 
var_dump(array_slice($arr, 1, -1));
//Работа с array_splice
//array_splice(массив, откуда отрезать, 
//	[сколько], [вставить взамен]); 
$arr = ['a', 'b', 'c', 'd', 'e'];
	
	$result = array_splice($arr, 1);
	var_dump($result);
var_dump($arr);
echo "\n==========================\n";
$arr1 = [1, 2, 3, 4, 5];
$r = array_splice($arr1, 1, -2);
var_dump($arr1);//1,4,5
var_dump($r);//2,3

echo "\n==========================\n";
$arr1 = [1, 2, 3, 4, 5];
$r2 = array_splice($arr1, 3, 0, ['a','b','c']);//[1, 2, 3, 'a', 'b', 'c', 4, 5]
var_dump($arr1);
echo "\n==========================\n";

echo "\n==============+++++++++++++\n";
// $arr1 = [1, 2, 3, 4, 5];
// $r1= array_splice($arr1, 1, 2, ['a','b'], 3, ['c']);
// var_dump($arr1);
$arr = [1, 2, 3, 4, 5]; 
array_splice($arr, 4, 0, ['c']);
array_splice($arr, 6, 0, ['e']);
array_splice($arr, 1, 0, ['a', 'b']);
var_dump($arr)."\n";
echo "\n==============+++++++++++++\n";
$arr1 = [1, 2, 3, 4, 5];
array_splice($arr1, 1, 0, ['a','b']);
array_splice($arr1, 6, 0, ['c']);
array_splice($arr1, 8, 0, ['e']);
var_dump($arr1);//[1, 'a', 'b', 2, 3, 4, 'c',  5, 'e']
echo "\n========+++++++++++++\n";
//Работа с array_keys, array_values, array_combine
//array_keys(массив);
//array_values(массив);
//array_combine(массив ключей, массив значений);
//Запишите в массив $keys ключи из этого массива, а в $values – значения.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$keys = array_keys($arr);
$values = array_values($arr);
$b = array_combine($keys,$values);
var_dump($b);
//создать массив из 2 массивов ключ === значение
$arr1 = ['a', 'b', 'c'];
	$arr2 = [1, 2, 3];
$f = array_combine($arr1, $arr2);
var_dump($f);
//Работа с array_flip, array_reverse
//array_flip(массив);
//Функция array_flip производит обмен местами ключей и значений массива.
//array_reverse(массив, [сохранять ли ключи]);
//Функция array_flip производит обмен местами ключей и значений массива.
//array_flip(массив);
//Поменяйте в нем местами ключи и значения.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
var_dump(array_flip($arr));
var_dump(array_reverse($arr));//{["c"]=>int(3),["b"]=> int(2) ["a"]=>int(1)}
//Функция array_search
//array_search(что ищем, где ищем, 
//	[сравнивать по типу = false]); 
 //  Найдите позицию первого элемента '-'. 
 $arr = ['a', '-', 'b', '-', 'c', '-', 'd'];   
var_dump(array_search('-',$arr));//int(1)
//Найдите позицию первого элемента '-' и удалите его с помощью функции array_splice.
$arr = ['a', '-', 'b', '-', 'c', '-', 'd'];
var_dump(array_search('-', $arr)); 
var_dump(array_splice($arr,1 ,1));//'-'
var_dump($arr);//['a', 'b', '-', 'c', '-', 'd']
//Работа с array_replace
//array_replace(массив, массив, массив...);
//Поменяйте элемент с ключом 0 на '!', а элемент 
//с ключом 3 - на '!!'.
$arr = ['a', 'b', 'c', 'd', 'e'];
var_dump(array_replace($arr,[0 => '!', 2=> '!!'] ));
//Работа с сортировку
// Для сортировки массивов в PHP существует несколько функций:
// sort - по возрастанию элементов, rsort - по убыванию элементов,
//  asort - по возрастанию элементов с сохранением ключей, 
//  arsort - по убыванию элементов с сохранением ключей, ksort - 
//  по возрастанию ключей, krsort - по убыванию ключей, usort -
//   по функции по элементам, uasort - по функции по элементам с сохранением ключей,
//    uksort - по функции по ключам, natsort - натуральная сортировка.

// Все эти функции изменяют сам массив - это значит,
//  что результат не нужно никуда присваивать: поменяется сам массив.
$arr = ['3'=>'a', '1'=>'c', '2'=>'e', '4'=>'b'];
var_dump(natsort($arr));
var_dump(arsort($arr));
//Работа с array_rand
//Выведите на экран случайный ключ из данного массива.
$arr = ['a' => 1, 'b' => 2, 'c' => 3];
$k =  array_rand($arr,1);
var_dump($k) ;//выводит ключ
$k = array_rand($arr);
echo $arr[$k];//выводит значение
echo "\n";
//Работа с shuffle
//Перемешайте его элементы в случайном порядке.
$arr = [1, 2, 3, 4, 5];
shuffle($arr);
var_dump($arr);
//Заполните массив числами от 1 до 25 с помощью range, 
//а затем перемешайте его элементы в случайном порядке.
$arr = range(1,25);
shuffle($arr);
var_dump($arr);
//Создайте массив, заполненный буквами от 'a' до 'z' так, 
//чтобы буквы шли в случайном порядке и не повторялись.
$arr = range('a','z');
shuffle($arr);
var_dump($arr);
//Сделайте строку длиной 6 символов, состоящую из маленьких 
//английских букв, расположенных в случайном порядке. Буквы не должны повторяться.
echo "\n=========================\n";
//Функция array_unique осуществляет удаление повторяющихся 
//элементов (дублей) из массива.
//array_unique(массив);
//Удалите из этого массива повторяющиеся элементы.
$arr = ['a', 'b', 'c', 'b', 'a'];
var_dump(array_unique($arr));
//Функция array_shift вырезает и возвращает первый элемент массива. При этом этот элемент исчезает из массива.
//array_shift(массив);
//Функция array_pop вырезает и возвращает последний элемент массива. При этом этот элемент исчезает из массива.
//array_pop(массив);
//Выведите на экран его первый и последний элемент, причем так, 
//чтобы в исходном массиве они исчезли.
$arr = [1, 2, 3, 4, 5];
array_shift($arr);
array_pop($arr);
var_dump($arr);//2,3,4
echo "\n===================\n";
//Функция array_unshift добавляет элементы в начало массива.
//Добавьте ему в начало элемент 0, а в конец - элемент 6.
//Функция array_push добавляет элементы в конец массива. 
$arr = [1, 2, 3, 4, 5];
array_unshift($arr,0);
array_push($arr, 6);
var_dump($arr);
//Функция array_pad дополняет массив определенным значением до заданного размера. 
//array_pad(массив, до какого размера 
//	заполнить, чем заполнять);
//Функция array_fill создает массив, заполненный элементами с определенным значением.
//array_fill(ключ первого элемента, 
//	сколько элементов, чем заполнять); 
//array_fill_keys(ключ первого элемента, 
	//сколько элементов, чем заполнять); 
    echo "\n===================\n";
    $arr = ['a', 'b', 'c'];
    $arr = array_pad($arr, 6, '-');
var_dump($arr);
//Заполните массив 10-ю буквами 'x'.
$arr = array_fill(0, 10, 'x');
var_dump($arr);
//Функция array_chunk разбивает одномерный массив в двухмерный. 
//array_chunk(массив, по сколько элементов);
//Создайте массив, заполненный целыми числами от 1 до 25. С помощью 
//функции array_chunk разбейте этот массив на 5 подмассивов по пять элементов в каждом.
$arr = range(1,25);
$arr1 = array_chunk($arr, 5);
var_dump($arr1);
//Функция array_count_values производит подсчет количества всех значений массива. 
//array_count_values(массив);
//Подсчитайте сколько раз встречается каждая из букв.
$arr = ['a', 'b', 'c', 'b', 'a'];
$arr1 = array_count_values($arr);
var_dump($arr1);
//Функция array_map применяет заданную функцию ко всем элементам
// массива и возвращает измененный массив. 
//array_map(имя функции в кавычках, 
	//массив, [еще массивы через запятую]);
   // Создайте новый массив, в котором будут лежать квадратные корни данных элементов.
   $arr = [1, 2, 3, 4, 5];
   $r = array_map('sqrt',$arr);
var_dump($r);
//Функция array_intersect вычисляет пересечение массивов - возвращает массив из элементов, 
//которые есть во всех массивах, переданных в функцию.
//array_intersect(массив, массив, массив...);
//Запишите в новый массив элементы, которые есть и в том, и в другом массиве.
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];

$res = array_intersect($arr1,$arr2);
var_dump($res);//элементы которые повторяються
$arr1 = [1, 2, 3, 4, 5];
$arr2 = [3, 4, 5, 6, 7];
$res1 = array_diff($arr1,$arr2);
var_dump($res1);//элементы которые не повторяються



//Функция time возвращает текущий момент
//  времени в формате timestamp. Формат timestamp - это 
//  количество секунд, прошедшее с 1-го января 1970 года по заданный момент времени.
//Выведите текущее время в формате timestamp.
echo time();
echo "\n";
//Выведите 1 марта 2025 года в формате timestamp.

echo mktime(12,59,59,01,03,2025);
echo "\n";
// Выведите 31 декабря текущего года в формате timestamp.
//  Скрипт должен работать независимо от года, в котором он запущен.
echo mktime(11,00,45,12,31,2024);
echo "\n";
echo  mktime(11,00,45,01,21,2024) - mktime(13,12,59,03,15,2000);
echo "\n";
//Найдите количество целых часов, прошедших с 
//7:23:48 текущего дня до настоящего момента времени.
echo (mktime(11,11,45,01,21,2024) - mktime(07,23,45,01,21,2024))/60/60;//3.8час
//Функция date выводит дату в заданном формате.
//date(формат, [момент времени в 
//	формате timestamp]);
echo "\n";
//Выведите на экран текущий год, месяц, день, час, минуту, секунду.
echo date('H:i:s d.m.Y');
echo "\n";
//С помощью функций mktime и date 
//выведите 12 февраля 2025 года в формате 12.02.2025.
echo date('d.m.Y', mktime(00,00,00,02,12,2025));
// Создайте массив дней недели. С помощью этого массива 
// и функции date выведите на экран название текущего дня
//  недели. Узнайте какой день недели был 06.06.2006, в ваш день рождения.
$arr = ['пн'=> 1, 'вт', 'ср', 'чт', 'пт', 'сб', 'вс'];
echo "\n";

$d =  date('w',mktime(00,00,00,06,06,2006));//2

echo $d;
echo "\n++++++++++++++++++++++++\n";
//Создайте массив месяцев. 
//С помощью этого массива и функции date выведите на экран название текущего месяца.
$arr = ['ян', 'фев', 'мр', 'ап', 'май', 'июн', 'июл', 'авг', 'сен', 'окт', 'ноя', 'дек'];
$day = date('n');
$d =  date('n',mktime(00,00,00,06,06,2006));
echo $d;//06
echo "\n";
echo $arr[$day];
echo "\n-------------\n";
echo $arr[$d];
echo "\n";
//Найдите количество дней в текущем месяце. 
//Скрипт должен работать независимо от месяца, в котором он запущен.
echo date('t');
echo "\n";
//Функция strtotime преобразует произвольную дату в формат timestamp. 
echo strtotime('Tomorrow');
echo "\n";
//Дана дата в формате 2025-12-31. С помощью функции strtotime
// и функции date преобразуйте ее в формат 31-12-2025.


    // Функция date_create создает объект 'дата', 
    // с которым в дальнейшем можно выполнять некоторые 
    // операции. К примеру, прибавить или отнять промежуток от даты 
    // с помощью date_modify или вывести дату в другом формате с помощью функции date_format.
$date = date_create('2025-12-31');
	echo date_format($date, 'Y-m-d');
    echo "\n";
    //В переменной $date лежит дата в формате 2025-12-31. 
//Прибавьте к этой дате 2 дня, 1 месяц и 3 дня, 1 год. Отнимите от этой даты 3 дня.
$date = date_create('2025-12-31');
date_modify($date, '1 month 3day 1 year - 3day');
echo date_format($date,'Y.m.d');
echo "\n";

//Узнайте сколько дней осталось до Нового Года.

$newyear = mktime(0, 0, 0, 1, 1, date('Y') + 1);
$sec = $newyear - time();
$days = floor($sec / (60*60*24));
echo "До нового года осталось: $days дней";
echo "\n";
//Пусть в переменной содержится некоторый год. Найдите все пятницы 13-е в этом году. 
//Результат выведите в виде массива дат.
$year = 2013;
$num = 0;
for($month = 1; $month <= 12; $month++){
	$days_in_month = date('t', mktime(0, 0, 0, $month, 1, $year));
	for($day = 1; $day <= $days_in_month; $day++){
	    $d = date('w', mktime(0, 0, 0, $month, $day, $year));
	    if($d == 5) $num ++;
	}
	
	$h += $num;
	$num = 0;
}
echo  $h;